apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-gradle-plugin'

group = 'net.satago.gradle'
archivesBaseName = 'aws-candy-tools'
version = file('./src/main/bundle/version').text

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    testImplementation 'junit:junit:4.12'
    testImplementation gradleTestKit()
    testImplementation 'commons-io:commons-io:2.4'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

jar.dependsOn sourcesJar
jar.dependsOn javadocJar

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {

            repository(url: nexusRepositoryUrl) {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            snapshotRepository(url: nexusSnapshotRepositoryUrl) {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            pom.project {
                name 'AWS Candy Tools'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'AWS Candy Tools'
                url 'https://github.com/satago/aws-candy-tools'

                scm {
                    connection 'git@github.com:satago/aws-candy-tools.git'
                    developerConnection 'git@github.com:satago/aws-candy-tools.git'
                    url 'https://github.com/satago/aws-candy-tools'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id "dmitrygusev"
                        name "Dmitry Gusev"
                        email "dmitry@anjlab.com"
                    }
                }
            }
        }
    }
}

task tarBundle(type: Tar) {
    archiveFileName = 'bundle.tgz'
    destinationDirectory = file('build/tar')
    from('./src/main/bundle') {
        exclude 'build/tar/'
    }
    compression Compression.GZIP
}

jar {
    manifest {
        attributes 'Implementation-Title': 'aws-candy-tools',
                'Implementation-Version': project.version
    }
    with copySpec() {
        from tarBundle.outputs
        into 'META-INF/aws-candy-tools'
    }
}

pluginUnderTestMetadata.dependsOn jar

pluginUnderTestMetadata {
    //  Run tests with final JAR file instead of extracted classes/resources
    pluginClasspath.from(
            files(jar.archiveFile),
            sourceSets.main.output.classesDirs,
            sourceSets.main.output.resourcesDir)
}
