apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'java-gradle-plugin'

group = 'net.satago.gradle'
version = file('./src/main/bundle/version').text

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    testImplementation 'junit:junit:4.12'
    testImplementation gradleTestKit()
    testImplementation 'commons-io:commons-io:2.4'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'aws-candy-tools'
            from components.java

            pom {
                name = 'AWS Candy Tools'
                description = 'AWS Candy Tools'
                url = 'https://github.com/satago/aws-candy-tools'

                scm {
                    connection = 'git@github.com:satago/aws-candy-tools.git'
                    developerConnection = 'git@github.com:satago/aws-candy-tools.git'
                    url = 'https://github.com/satago/aws-candy-tools'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://satago-501309906781.d.codeartifact.eu-west-1.amazonaws.com/maven/satago-java/'
            credentials {
                username "aws"
                password System.env.CODEARTIFACT_AUTH_TOKEN
            }
        }
    }
}

task tarBundle(type: Tar) {
    archiveFileName = 'bundle.tgz'
    destinationDirectory = file('build/tar')
    from('./src/main/bundle') {
        exclude 'build/tar/'
    }
    compression Compression.GZIP
}

jar {
    manifest {
        attributes 'Implementation-Title': 'aws-candy-tools',
                'Implementation-Version': project.version
    }
    with copySpec() {
        from tarBundle.outputs
        into 'META-INF/aws-candy-tools'
    }
}

pluginUnderTestMetadata.dependsOn jar

pluginUnderTestMetadata {
    //  Run tests with final JAR file instead of extracted classes/resources
    pluginClasspath.from(
            files(jar.archiveFile),
            sourceSets.main.output.classesDirs,
            sourceSets.main.output.resourcesDir)
}
